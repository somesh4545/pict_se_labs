======================================================================== inserting into table ======================================================================

mysql> insert into customers(fname, lname, address, phone_no) values("somesh", "somani", "pune", "8080259833"), ("priyanshu", "mahukhaye", "nagpur", "7787878112");
Query OK, 2 rows affected (0.11 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> insert into customers(fname, lname, address, phone_no) values("om", "nikam", "nasik", "8080809812"), ("shitanshu", "b", "bandara", "7787878112");
Query OK, 2 rows affected (0.08 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> select * from customers;
+----+------------+-----------+---------+------------+
| id | fname      | lname     | address | phone_no   |
+----+------------+-----------+---------+------------+
|  1 | somesh     | somani    | pune    | 8080259833 |
|  2 | priyanshu  | mahukhaye | nagpur  | 7787878112 |
|  3 | om         | nikam     | nasik   | 8080809812 |
|  4 | shitanshu  | b         | bandara | 7787878112 |
|  5 | madhav     | jadhav    | pune    | 8090809812 |
|  6 | sudharshan | patil     | sangli  | 7787412367 |
+----+------------+-----------+---------+------------+
6 rows in set (0.00 sec)

mysql> select * from sellers;
+----+---------------------------+-------------------+--------+------------+
| id | email                     | brand_name        | gst_no | phone_no   |
+----+---------------------------+-------------------+--------+------------+
|  1 | theindiangarage@gmail.com | the indian garage | 4545   | 8080234588 |
|  2 | nike_india@gmail.com      | nike              | 4546   | 8080232588 |
+----+---------------------------+-------------------+--------+------------+
2 rows in set (0.00 sec)

mysql> select * from products;
+----+------------------+--------------------------------------------------------------------+-----+-------+------------------+-------------------------------+
| id | name             | description                                                        | qty | price | discounted_price | img_urls                      |
+----+------------------+--------------------------------------------------------------------+-----+-------+------------------+-------------------------------+
|  1 | red-white shirt  | A shirt is a piece of clothing worn on the upper part of your body |  10 |   999 |              499 | https://picsum.photos/200/300 |
|  2 | blue-white shirt | A shirt is a piece of clothing worn on the upper part of your body |  10 |   999 |              499 | https://picsum.photos/200/300 |
|  3 | black shirt      | A shirt is a piece of clothing worn on the upper part of your body |  10 |   999 |              499 | https://picsum.photos/200/300 |
|  4 | red sports wear  | durable sports wear                                                |  15 |   699 |              499 | https://picsum.photos/200/300 |
|  5 | black cap        | Perfect cap for summer                                             |  10 |   299 |              199 | https://picsum.photos/200/300 |
|  6 | black tshirt     | durable sports wear                                                |  15 |   699 |              499 | https://picsum.photos/200/300 |
+----+------------------+--------------------------------------------------------------------+-----+-------+------------------+-------------------------------+
6 rows in set (0.00 sec)

mysql> insert into selling(p_id, seller_id) values(1, 1), (2, 1), (3, 1), (4, 2), (5, 2), (6, 2);
Query OK, 6 rows affected (0.14 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> select * from selling;
+----+------+-----------+
| id | p_id | seller_id |
+----+------+-----------+
|  1 |    1 |         1 |
|  2 |    2 |         1 |
|  3 |    3 |         1 |
|  4 |    4 |         2 |
|  5 |    5 |         2 |
|  6 |    6 |         2 |
+----+------+-----------+
6 rows in set (0.00 sec)


1) Display all the Purchase orders of a specific Customer
mysql> select products.name, products.discounted_price, fname, lname, date, phone_no, date 
    -> from customers
    -> inner join orders on orders.c_id=customers.id
    -> inner join products on orders.p_id=products.id
    -> where customers.id=1;
+------------------+------------------+--------+--------+---------------------+------------+---------------------+
| name             | discounted_price | fname  | lname  | date                | phone_no   | date                |
+------------------+------------------+--------+--------+---------------------+------------+---------------------+
| red sports wear  |              499 | somesh | somani | 2023-03-29 12:23:07 | 8080259833 | 2023-03-29 12:23:07 |
| black cap        |              199 | somesh | somani | 2023-03-29 12:23:07 | 8080259833 | 2023-03-29 12:23:07 |
| blue-white shirt |              499 | somesh | somani | 2023-03-29 12:23:07 | 8080259833 | 2023-03-29 12:23:07 |
| black cap        |              199 | somesh | somani | 2023-03-29 12:23:23 | 8080259833 | 2023-03-29 12:23:23 |
| black tshirt     |              499 | somesh | somani | 2023-03-29 12:23:23 | 8080259833 | 2023-03-29 12:23:23 |
+------------------+------------------+--------+--------+---------------------+------------+---------------------+
5 rows in set (0.01 sec)


2) Get Customer and Data Item Information for a Specific Purchase Order
mysql> select orders.id as order_id, fname, lname, phone_no, products.name, products.discounted_price
    -> from orders
    -> inner join products on orders.p_id=products.id
    -> inner join customers on orders.c_id=customers.id
    -> where orders.id=5;
+----------+--------+--------+------------+-----------+------------------+
| order_id | fname  | lname  | phone_no   | name      | discounted_price |
+----------+--------+--------+------------+-----------+------------------+
|        5 | somesh | somani | 8080259833 | black cap |              199 |
+----------+--------+--------+------------+-----------+------------------+
1 row in set (0.00 sec)

3) Get the Total Value of Purchase Orders
mysql> select concat(count(orders.id), " total orders, unique products ", count(distinct(products.id))) as "Purchase details", sum(products.discounted_price) "Total Purchase (RS)" from orders inner join products on orders.p_id=products.id;
+-----------------------------------+---------------------+
| Purchase details                  | Total Purchase (RS) |
+-----------------------------------+---------------------+
| 9 total orders, unique products 6 |                3591 |
+-----------------------------------+---------------------+
1 row in set (0.01 sec)

4) List the Purchase Orders in descending order as per total.
mysql> select orders.id as "ORDER ID", products.name as "product name", products.discounted_price as "total" from orders inner join products on orders.p_id=products.id
order by discounted_price desc;
+----------+------------------+-------+
| ORDER ID | product name     | total |
+----------+------------------+-------+
|        4 | red-white shirt  |   499 |
|        3 | blue-white shirt |   499 |
|        7 | black shirt      |   499 |
|        1 | red sports wear  |   499 |
|        6 | black tshirt     |   499 |
|        9 | black tshirt     |   499 |
|        2 | black cap        |   199 |
|        5 | black cap        |   199 |
|        8 | black cap        |   199 |
+----------+------------------+-------+
9 rows in set (0.00 sec)

5)Display the name of customers whose first name starts with “So”. (String matching :Like operator)
mysql> select * from customers where fname like 'so%';
+----+--------+--------+---------+------------+------+
| id | fname  | lname  | address | phone_no   | dob  |
+----+--------+--------+---------+------------+------+
|  1 | somesh | somani | pune    | 8080259833 |   18 |
|  7 | soham  | s      | pune    | 987656531  |   20 |
+----+--------+--------+---------+------------+------+
2 rows in set (0.00 sec)

6)Display the name of customer whose order amount is greater than all the customers. (Relational Operator: <, >, <=, >=, = =,!=)
mysql> select customers.fname as "Customer name", sum(products.discounted_price) as "Total order value" from orders inner join customers on orders.c_id=customers.id inner join products on orders.p_id=products.id group by orders.c_id order by sum(products.discounted_price) desc limit 3;
+---------------+-------------------+
| Customer name | Total order value |
+---------------+-------------------+
| somesh        |              1895 |
| shitanshu     |               998 |
| om            |               499 |
+---------------+-------------------+
3 rows in set (0.00 sec)

7)Display order details of customer whose city name is “Pune” and purchase date is “12/04/2023” (Boolean Operators: and, or)
mysql> select orders.id as "ORDER ID", customers.fname "Customer name", products.name as "Product name", products.discounted_price as "Price" from orders inner join customers on orders.c_id=customers.id inner join products on orders.p_id=products.id where customers.address="pune" and cast(orders.date as date)='2023-04-12';
+----------+---------------+-----------------+-------+
| ORDER ID | Customer name | Product name    | Price |
+----------+---------------+-----------------+-------+
|       10 | somesh        | red-white shirt |   499 |
+----------+---------------+-----------------+-------+
1 row in set (0.00 sec)

8)Delete Purchase Order 10
mysql> delete from orders where id=10;
Query OK, 1 row affected (0.10 sec)

mysql> select * from orders;
+----+------+------+---------------------+
| id | c_id | p_id | date                |
+----+------+------+---------------------+
|  1 |    1 |    4 | 2023-03-29 12:23:07 |
|  2 |    1 |    5 | 2023-03-29 12:23:07 |
|  3 |    1 |    2 | 2023-03-29 12:23:07 |
|  4 |    3 |    1 | 2023-03-29 12:23:23 |
|  5 |    1 |    5 | 2023-03-29 12:23:23 |
|  6 |    1 |    6 | 2023-03-29 12:23:23 |
|  7 |    4 |    3 | 2023-03-29 12:23:47 |
|  8 |    5 |    5 | 2023-03-29 12:23:47 |
|  9 |    4 |    6 | 2023-03-29 12:23:47 |
+----+------+------+---------------------+
9 rows in set (0.00 sec)



7-B

1) Get the total no of customers.
mysql> select count(*) as "Total customers" from customers;
+-----------------+
| Total customers |
+-----------------+
|               7 |
+-----------------+
1 row in set (0.01 sec)

2) Display average purchase amount of all the customers.
mysql> select avg(products.discounted_price) as "Avg purchase value" from orders inner join customers on orders.c_id=customers.id inner join products on orders.p_id=products.id;
+--------------------+
| Avg purchase value |
+--------------------+
|                399 |
+--------------------+
1 row in set (0.00 sec)

3) Display total purchase amount of all the customers.
mysql> select sum(products.discounted_price) as "Total purchase" from orders inner join customers on orders.c_id=customers.id inner join products on orders.p_id=products.id;
+----------------+
| Total purchase |
+----------------+
|           3591 |
+----------------+
1 row in set (0.00 sec)

4) Find DAYNAME, MONTHNAME and YEAR of the purchase order made
mysql> select day(date) as day, month(date) as month, year(date) as year from or
ders where id=1;
+------+-------+------+
| day  | month | year |
+------+-------+------+
|   29 |     3 | 2023 |
+------+-------+------+
1 row in set (0.00 sec)

5) Get current date & time, current time, current date
mysql> select date(now()) as date, time(now()) as time;
+------------+----------+
| date       | time     |
+------------+----------+
| 2023-04-17 | 14:53:03 |
+------------+----------+
1 row in set (0.00 sec)

6) Get 6 month future & past date using interval function based on current date and name the column accordingly.
mysql> select now()-INTERVAL 6 MONTH as "Past",  now()+INTERVAL 6 MONTH as "Future";
+---------------------+---------------------+
| Past                | Future              |
+---------------------+---------------------+
| 2022-10-17 15:13:59 | 2023-10-17 15:13:59 |
+---------------------+---------------------+
1 row in set (0.00 sec)

7) Find purchase details of the customers group by product category.



